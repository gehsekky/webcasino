generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id                String              @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name              String              @unique @db.VarChar(256)
  salt              String?             @db.VarChar(32)
  password_hash     String?             @db.VarChar(512)
  money             Int                 @default(0)
  updated_at        DateTime            @default(now()) @db.Timestamptz(6)
  created_at        DateTime            @default(now()) @db.Timestamptz(6)
  game              game[]
  game_player       game_player[]
  money_transaction money_transaction[]
}

model game {
  id          String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_by  String        @db.Uuid
  data        Json          @db.Json
  updated_at  DateTime      @default(now()) @db.Timestamptz(6)
  created_at  DateTime      @default(now()) @db.Timestamptz(6)
  user        user          @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  game_player game_player[]
}

model money_transaction {
  id             String       @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id        String       @db.Uuid
  game_player_id String?      @db.Uuid
  type           String       @db.VarChar(32)
  note           String?      @db.VarChar(512)
  updated_at     DateTime     @default(now()) @db.Timestamptz(6)
  created_at     DateTime     @default(now()) @db.Timestamptz(6)
  game_player    game_player? @relation(fields: [game_player_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user           user         @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model game_player {
  id                String              @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  game_id           String              @db.Uuid
  user_id           String              @db.Uuid
  data              Json                @db.Json
  updated_at        DateTime            @default(now()) @db.Timestamptz(6)
  created_at        DateTime            @default(now()) @db.Timestamptz(6)
  game              game                @relation(fields: [game_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user              user                @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  game_player_bet   game_player_bet[]
  game_player_round game_player_round[]
  money_transaction money_transaction[]
}

model game_player_round {
  game_player_id String      @db.Uuid
  round          Int
  action         String      @db.VarChar(64)
  updated_at     DateTime    @default(now()) @db.Timestamptz(6)
  created_at     DateTime    @default(now()) @db.Timestamptz(6)
  game_player    game_player @relation(fields: [game_player_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([game_player_id, round])
  @@index([game_player_id], map: "idx_game_player_round_game_player_id")
}

model game_player_bet {
  id             String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  game_player_id String      @db.Uuid
  amount         Int
  type           String      @db.VarChar(128)
  updated_at     DateTime    @default(now()) @db.Timestamptz(6)
  created_at     DateTime    @default(now()) @db.Timestamptz(6)
  game_player    game_player @relation(fields: [game_player_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
